{"version":3,"sources":["ScoreParser.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\hall\\gamelib\\room","sourcesContent":["﻿import {TSCommon} from \"../../TSCommon\";\r\nimport {ByteArray} from \"../../common/ByteArray\";\r\nexport class tagScoreColumnDesc {\r\n    public cbLength:number;\t\t\t\t//数据长度\r\n    public cbScoreField: number;\t\t\t//分数字段\r\n    public cbDataType: number;\t\t\t\t//数据类型\r\n    public szDesc: string;   // 列描述，占16个长度\r\n    constructor() {\r\n        this.cbLength = 0;\r\n    }\r\n    public GetLength(): number{\r\n        return 19;\r\n    }\r\n    public Deserialize(buf:ByteArray, nOffset:number):boolean{\r\n        buf.position = nOffset;\r\n        this.cbLength = buf.readUnsignedByte();\r\n        this.cbScoreField = buf.readUnsignedByte();\r\n        this.cbDataType = buf.readUnsignedByte();\r\n\r\n        var sz: ByteArray = new ByteArray();\r\n        buf.readBytes(sz, 0, 16);\r\n        sz.position = 0;\r\n        this.szDesc = TSCommon.readGbkString(sz, 16);//sz.readUTFBytes(16);\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class ScoreColumnDetailInfo {\r\n    public column: tagScoreColumnDesc;\r\n    public dwOffset: number;\r\n    constructor() {\r\n        this.column = new tagScoreColumnDesc();\r\n        this.dwOffset = 0;\r\n    }\r\n}\r\n\r\nexport class ScoreParser {\r\n    private static _instance: ScoreParser;\r\n    public static getInstance(): ScoreParser {\r\n        if (this._instance == null)\r\n            this._instance = new ScoreParser();\r\n        return this._instance;\r\n    }\r\n\r\n    public static enScore_Score: number = 0;\t//成绩\r\n    public static enScore_Win: number = 1;\t\t\t\t//胜利局数\r\n    public static enScore_Loss: number = 2;\t\t\t\t//失败局数\r\n    public static enScore_Draw: number = 3;\t\t\t\t//打平局数\r\n    public static enScore_Flee: number = 4;\t\t\t\t//逃跑局数\r\n    public static enScore_SetCount: number = 5;\t\t\t//总共局数\r\n\r\n    public static enScore_Custom: number = 16;\t//...前面的保留，后面的自定义\r\n    public static enScore_Gold: number = 17;\t\t\t\t//金币\r\n    public static enScore_Tax: number = 18;\t\t\t\t//税\r\n    public static enScore_Ranking: number = 19;\t\t\t//等级分\r\n\r\n    private _pHeader: ByteArray = new ByteArray();\r\n    private _nHeaderLen:number;\t// 头的长度\r\n    private _nScoreBufLen:number;\t// 分数buffer的长度\r\n    private _bInitialized: boolean;\t// 是否初始化成功过\r\n    // 存储所有的列信息\r\n    private _mapHeaders: ScoreColumnDetailInfo[];\r\n\r\n    public constructor(){\t\t\r\n        this._nHeaderLen = 0;\r\n        this._nScoreBufLen = 0;\r\n        this._bInitialized = false;\r\n    }\r\n   \r\n    // 至少提供以下方法\r\n    // 得到某一字段的分数,因为不知道数据类型,所以填充void指针\r\n    public GetScoreField(lpScoreBuffer: ByteArray/*in*/, nField: number/*in*/, lpScore: ByteArray/*out*/): boolean {\r\n        // 应该强制给的buffer的长度是对的\r\n        var nMaxLen: number = lpScore.length;\r\n        var nBufLen: number = lpScoreBuffer.length;\r\n        if (this._nScoreBufLen == 0 || this._nHeaderLen == 0) {\r\n            // 还没有初始化\r\n            return false;\r\n        }\r\n        if (nBufLen <= 0) {\r\n            return false;\r\n        }\r\n        if (nBufLen != this._nScoreBufLen) {\r\n            TSCommon.log(\"ScoreParser:getScoreField(),nBufLen != _nScoreBufLen\");\r\n            return false;\r\n        }\r\n\r\n        var info: ScoreColumnDetailInfo = this._mapHeaders[nField];\r\n\r\n        if (info == null) {\r\n            // 没有找到\r\n            return false;\r\n        }\r\n        // 给的输出函数长度是否足够\r\n        if (nMaxLen < info.column.cbLength) {\r\n            return false;\r\n        }\r\n        // 从其偏移位置中取出数据\r\n        // 先初始化\r\n        lpScore.position = 0;\r\n        lpScore.writeBytes(lpScoreBuffer, info.dwOffset, nMaxLen);\r\n        lpScore.position = 0;\r\n        return true;\r\n    }\r\n\r\n    public getScoreFieldInt(lpScoreBuffer: ByteArray/*in*/, Field: number): number {\r\n        var nRetVal: number = -1;\r\n        var byRetVal: ByteArray = new ByteArray();\r\n        byRetVal.length = 4;\r\n        if (!this.GetScoreField(lpScoreBuffer, Field, byRetVal))\r\n            return nRetVal;\r\n        byRetVal.position = 0;\r\n        nRetVal = byRetVal.readInt();\r\n        return nRetVal;\r\n    }\r\n\r\n    public getScoreHeader(): ByteArray {\r\n        if (this._nHeaderLen <= 0)\r\n            return null;\r\n        var btRet: ByteArray = new ByteArray();\r\n        btRet.writeBytes(this._pHeader, 0, this._nHeaderLen);\r\n        return btRet;\r\n    }\r\n\r\n    public setScoreHeader(lpScoreHeader: ByteArray): Boolean {\r\n        this._bInitialized = false;\r\n        var nLen: number = lpScoreHeader.length;\r\n        if (nLen <= 0) {\r\n            return false;\r\n        }\r\n\r\n        var descTemp: tagScoreColumnDesc = new tagScoreColumnDesc();\r\n        var descLen: number = descTemp.GetLength();\r\n\r\n        // 给的长度是否符合列长度的倍数\r\n        if (nLen % descLen != 0) {\r\n            return false;\r\n        }\r\n\r\n        this._nHeaderLen = nLen;\r\n        this._pHeader.position = 0;\r\n        this._pHeader.writeBytes(lpScoreHeader);\r\n\r\n\r\n        // 这里对这个头进行分析\r\n        // 删除所有\r\n        this._mapHeaders = new Array<ScoreColumnDetailInfo>();\r\n\r\n        // 列数量\r\n        var nColumnCount: number = this._nHeaderLen / descLen;\r\n        // 偏移\r\n        this._nScoreBufLen = 0;\r\n        var nOffSet: number = 0;\r\n        for (var i: number = 0; i < nColumnCount; i++) {\r\n            var desc: ScoreColumnDetailInfo = new ScoreColumnDetailInfo();\r\n            desc.column.Deserialize(this._pHeader, nOffSet);\r\n            nOffSet += desc.column.GetLength();\r\n            desc.dwOffset = this._nScoreBufLen;\r\n            this._nScoreBufLen += desc.column.cbLength;\r\n\r\n            // add to the map\r\n            var nKey: number = desc.column.cbScoreField;\r\n            this._mapHeaders[nKey] = desc;\r\n        }\r\n        // 设置成功\r\n        this._bInitialized = true;\r\n        return true;\r\n    }\r\n\r\n    public IsInitialized(): Boolean {\r\n        return this._bInitialized;\r\n    }\t\r\n}"]}