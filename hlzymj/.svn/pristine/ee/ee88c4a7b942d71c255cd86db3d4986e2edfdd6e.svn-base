{"version":3,"sources":["IOErrorEvent.ts"],"names":[],"mappings":";;;;;AAAA,2CAA0C;AAE1C,sFAAsF;AACtF,EAAE;AACF,iDAAiD;AACjD,wBAAwB;AACxB,sEAAsE;AACtE,+EAA+E;AAC/E,EAAE;AACF,uEAAuE;AACvE,sEAAsE;AACtE,0EAA0E;AAC1E,4EAA4E;AAC5E,6EAA6E;AAC7E,8CAA8C;AAC9C,6EAA6E;AAC7E,8EAA8E;AAC9E,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,2EAA2E;AAC3E,gFAAgF;AAChF,gFAAgF;AAChF,8EAA8E;AAC9E,6EAA6E;AAC7E,wEAAwE;AACxE,gFAAgF;AAChF,sDAAsD;AACtD,EAAE;AACF,sFAAsF;AAKtF;;;;;;GAMG;AACH;;;;;;GAMG;AACH;IAAkC,gCAAU;IAgBxC;;;;;;;;OAQG;IACH;;;;;;;;OAQG;IACH,sBAAmB,IAAY,EAAE,OAAwB,EAAE,UAA2B;QAArD,wBAAA,EAAA,eAAwB;QAAE,2BAAA,EAAA,kBAA2B;eAClF,kBAAM,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC;IACpC,CAAC;IAED;;;;;;OAMG;IACH;;;;;;OAMG;IACW,iCAAoB,GAAlC,UAAmC,MAAwB;QACvD,IAAI,KAAK,GAAiB,uBAAU,CAAC,MAAM,CAAC,YAAY,EAAE,YAAY,CAAC,QAAQ,CAAC,CAAC;QACjF,IAAI,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzC,uBAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAO,MAAM,CAAC;IAClB,CAAC;IAvDD;;;;;OAKG;IACH;;;;;OAKG;IACW,qBAAQ,GAAW,SAAS,CAAC;IA4C/C,mBAAC;CA1DD,AA0DC,CA1DiC,uBAAU,GA0D3C;AA1DY,oCAAY","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\hall\\event","sourcesContent":["import { EgretEvent } from \"./EgretEvent\";\nimport { IEventDispatcher } from \"./IEventDispatcher\";\n//////////////////////////////////////////////////////////////////////////////////////\n//\n//  Copyright (c) 2014-present, Egret Technology.\n//  All rights reserved.\n//  Redistribution and use in source and binary forms, with or without\n//  modification, are permitted provided that the following conditions are met:\n//\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//     * Neither the name of the Egret nor the\n//       names of its contributors may be used to endorse or promote products\n//       derived from this software without specific prior written permission.\n//\n//  THIS SOFTWARE IS PROVIDED BY EGRET AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS\n//  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n//  IN NO EVENT SHALL EGRET AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;LOSS OF USE, DATA,\n//  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n//  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n//////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\n/**\n * @language en_US\n * @classdesc IO流事件，当错误导致输入或输出操作失败时调度 IOErrorEvent 对象。\n * @version Egret 2.4\n * @platform Web,Native\n * @includeExample egret/events/IOErrorEvent.ts\n */\n/**\n * @language zh_CN\n * @classdesc IO流事件，当错误导致输入或输出操作失败时调度 IOErrorEvent 对象。\n * @version Egret 2.4\n * @platform Web,Native\n * @includeExample egret/events/IOErrorEvent.ts\n */\nexport class IOErrorEvent extends EgretEvent {\n\n    /**\n     * @language en_US\n     * io error\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    /**\n     * @language zh_CN\n     * io发生错误\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    public static IO_ERROR: string = \"ioError\";\n\n    /**\n     * @language en_US\n     * Create a egret.IOErrorEvent objects\n     * @param type {string} Type of event, accessible as EgretEvent.type.\n     * @param bubbles {boolean} Determines whether the EgretEvent object participates in the bubbling stage of the event flow. The default value is false.\n     * @param cancelable {boolean} Determine whether the EgretEvent object can be canceled. The default value is false.\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    /**\n     * @language zh_CN\n     * 创建一个 egret.IOErrorEvent 对象\n     * @param type {string} 事件的类型，可以作为 EgretEvent.type 访问。\n     * @param bubbles {boolean} 确定 EgretEvent 对象是否参与事件流的冒泡阶段。默认值为 false。\n     * @param cancelable {boolean} 确定是否可以取消 EgretEvent 对象。默认值为 false。\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    public constructor(type: string, bubbles: boolean = false, cancelable: boolean = false) {\n        super(type, bubbles, cancelable);\n    }\n\n    /**\n     * @language en_US\n     * EventDispatcher object using the specified event object thrown EgretEvent. The objects will be thrown in the object cache pool for the next round robin.\n     * @param target {egret.IEventDispatcher} Distribute event target\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    /**\n     * @language zh_CN\n     * 使用指定的EventDispatcher对象来抛出Event事件对象。抛出的对象将会缓存在对象池上，供下次循环复用。\n     * @param target {egret.IEventDispatcher} 派发事件目标\n     * @version Egret 2.4\n     * @platform Web,Native\n     */\n    public static dispatchIOErrorEvent(target: IEventDispatcher): boolean {\n        var event: IOErrorEvent = EgretEvent.create(IOErrorEvent, IOErrorEvent.IO_ERROR);\n        var result = target.dispatchEvent(event);\n        EgretEvent.release(event);\n        return result;\n    }\n}\n"]}