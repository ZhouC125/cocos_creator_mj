{"version":3,"sources":["gameRuleLayer.js"],"names":["HallResources","require","gameRuleLayer","cc","Class","extends","Component","properties","bg","default","type","Node","game_toggle1","Toggle","game_toggle2","game_help_scrollView","ScrollView","yjly_toggle","cxz_toggle","helpAtlas","SpriteAtlas","onLoad","self","loader","loadRes","SpriteFrame","err","spriteFrame","m_yjlyRuleFrame","m_cxzRule","node","on","EventType","TOUCH_START","onTouch","showYJLY","showCXZ","event","poisition","touch","getLocation","locationInNode","convertToNodeSpace","s","getContentSize","rect","width","height","rectContainsPoint","closeAndChangeScaleAction","isChecked","showMessage","showRule","data","scrollview","getComponent","content","item","children","listFrameName","getSpriteFrame","Sprite","getRect","setContentSize","size","scrollToTop","action1","scaleTo","action2","fadeOut","action3","callFunc","active","TSCommon","dispatchEvent","onChangeShadow","sequence","runAction","onCloseClicked","getInstance","playCloseEffect","module","exports"],"mappings":"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","file":"gameRuleLayer.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\hall\\rule","sourcesContent":["import {TSCommon} from \"TSCommon\";\r\nvar HallResources = require(\"HallResources\");\r\nvar gameRuleLayer = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        bg:{\r\n            default: null,\r\n            type: cc.Node,\r\n        },\r\n        game_toggle1:{\r\n            default: null,\r\n            type: cc.Toggle,\r\n        },\r\n\r\n        game_toggle2:{\r\n            default: null,\r\n            type: cc.Toggle,\r\n        },\r\n\r\n        game_help_scrollView: {\r\n            default: null,\r\n            type: cc.ScrollView,\r\n        },\r\n\r\n        yjly_toggle:{\r\n            default: null,\r\n            type: cc.Toggle,\r\n        },\r\n\r\n        cxz_toggle:{\r\n            default: null,\r\n            type: cc.Toggle,\r\n        },\r\n\r\n        helpAtlas: {\r\n            default: null,\r\n            type: cc.SpriteAtlas,\r\n        }\r\n    },\r\n\r\n    onLoad: function () {\r\n        var self = this;\r\n        cc.loader.loadRes(\"texture/game/help/yjly_rule1\", cc.SpriteFrame, function (err, spriteFrame) {\r\n            if(!err){\r\n                self.m_yjlyRuleFrame = spriteFrame;\r\n            }\r\n        })\r\n\r\n        cc.loader.loadRes(\"texture/game/help/cxz_rule1\", cc.SpriteFrame, function (err, spriteFrame) {\r\n            if(!err){\r\n                self.m_cxzRule = spriteFrame\r\n            }\r\n        })\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);\r\n        this.yjly_toggle.node.on('toggle', this.showYJLY, this);\r\n        this.cxz_toggle.node.on('toggle', this.showCXZ, this);\r\n        self.showYJLY()\r\n    },\r\n    \r\n    onTouch: function (event) {\r\n        var poisition = event.touch.getLocation();\r\n        var locationInNode = this.bg.convertToNodeSpace(poisition);\r\n        var s = this.bg.getContentSize();\r\n        var rect = cc.rect(0, 0, s.width, s.height);\r\n        if (cc.rectContainsPoint(rect, locationInNode)) {\r\n            // this.node.active = true;\r\n        }\r\n        else {\r\n            // this.node.active = false;\r\n            this.closeAndChangeScaleAction();\r\n        }\r\n    },\r\n\r\n    showYJLY:function(){\r\n        this.yjly_toggle.isChecked = true;\r\n        this.cxz_toggle.isChecked = false;\r\n        if (this.game_toggle1.isChecked){\r\n            this.showMessage(0,1)\r\n        }\r\n        else{\r\n            this.showRule(0,1)\r\n        }\r\n    },\r\n\r\n    showCXZ:function(){\r\n        this.yjly_toggle.isChecked = false;\r\n        this.cxz_toggle.isChecked = true;\r\n        if (this.game_toggle1.isChecked){\r\n            this.showMessage(0,2)\r\n        }\r\n        else{\r\n            this.showRule(0,2)\r\n        }\r\n    },\r\n\r\n    showMessage:function(event,data){\r\n        this.game_toggle1.isChecked = true;\r\n        this.game_toggle2.isChecked = false;\r\n        var scrollview = this.game_help_scrollView.node.getComponent(cc.ScrollView)\r\n        var content = scrollview.content;\r\n        var item = content.children[0];\r\n        var listFrameName = \"\"\r\n        if (data == 1){\r\n            listFrameName = \"yjly_double\"\r\n        }\r\n        else if (data == 2){\r\n            listFrameName = \"cxz_double\"\r\n        }\r\n        else\r\n        {\r\n            listFrameName = this.yjly_toggle.isChecked?\"yjly_double\":\"cxz_double\";\r\n        }\r\n        var spriteFrame = this.helpAtlas.getSpriteFrame(listFrameName);\r\n        if(spriteFrame){\r\n            item.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n        }\r\n        \r\n        var rect = spriteFrame.getRect();\r\n        content.setContentSize(cc.size(rect.width, rect.height + 60));\r\n        scrollview.scrollToTop(0);\r\n    },\r\n\r\n    showRule:function(event,data){\r\n        this.game_toggle1.isChecked = false;\r\n        this.game_toggle2.isChecked = true;\r\n        var scrollview = this.game_help_scrollView.node.getComponent(cc.ScrollView)\r\n        var content = scrollview.content;\r\n        var item = content.children[0];\r\n        var self = this;\r\n        var spriteFrame;\r\n        if (data == 1){\r\n            spriteFrame = self.m_yjlyRuleFrame\r\n        }\r\n        else if (data == 2){\r\n            spriteFrame = self.m_cxzRule\r\n        }\r\n        else\r\n        {\r\n            spriteFrame = this.yjly_toggle.isChecked?self.m_yjlyRuleFrame:self.m_cxzRule;\r\n        }\r\n\r\n        if(spriteFrame){\r\n            item.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n        }\r\n        \r\n        var rect = spriteFrame.getRect();\r\n\r\n        content.setContentSize(cc.size(rect.width, rect.height + 100));\r\n\r\n        scrollview.scrollToTop(0);\r\n    },\r\n//     onLoad: function () {\r\n//         var self = this;\r\n//         cc.loader.loadRes(\"texture/game/help/yjly_rule1\", cc.SpriteFrame, function (err, spriteFrame) {\r\n//             if(!err){\r\n//                 self.m_yjlyRuleFrame = spriteFrame;\r\n//             }\r\n//         })\r\n\r\n//         cc.loader.loadRes(\"texture/game/help/cxz_rule1\", cc.SpriteFrame, function (err, spriteFrame) {\r\n//             if(!err){\r\n//                 self.m_cxzRule = spriteFrame\r\n//             }\r\n//         })\r\n//     },\r\n\r\n//     onEnable:function(){\r\n//         this.initUI();\r\n//     },\r\n\r\n//     initUI:function(){\r\n//         var DeskScene = this.node.parent.getComponent(\"DeskScene\");\r\n\r\n//         var isCXZ = false;\r\n//         if(DeskScene && DeskScene.IsCXZ()){\r\n//             isCXZ = true;\r\n//         }\r\n\r\n//         var iconFrameName;\r\n//         var listFrameName;\r\n\r\n//         if(isCXZ){\r\n//             iconFrameName = \"cxz_icon_press\";\r\n//             listFrameName = \"cxz_double\"\r\n//         }\r\n//         else{\r\n//             iconFrameName = \"yjly_icon_press\";\r\n//             listFrameName = \"yjly_double\"\r\n//         }\r\n        \r\n\r\n\r\n//         var gameListScrollview = this.game_list_scrollView.node.getComponent(cc.ScrollView)\r\n//         var listContent = gameListScrollview.content;\r\n//         var listItem = listContent.children[0];\r\n        \r\n//         var spriteFrame = this.helpAtlas.getSpriteFrame(iconFrameName);\r\n//         if(spriteFrame){\r\n//             listItem.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n//         }\r\n\r\n//         var scrollview = this.game_help_scrollView.node.getComponent(cc.ScrollView)\r\n//         var content = scrollview.content;\r\n//         var item = content.children[0];\r\n\r\n//         var spriteFrame = this.helpAtlas.getSpriteFrame(listFrameName);\r\n//         if(spriteFrame){\r\n//             item.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n//         }\r\n        \r\n//         var rect = spriteFrame.getRect();\r\n//         content.setContentSize(cc.size(rect.width, rect.height + 60));\r\n//         scrollview.scrollToTop(0);\r\n//     },\r\n\r\n//     onGameIntroClicked: function (event) {\r\n\r\n//         this.game_toggle1.getComponent(cc.Toggle).isChecked = true;\r\n//         this.game_toggle2.getComponent(cc.Toggle).isChecked = false;\r\n\r\n//         var scrollview = this.game_help_scrollView.node.getComponent(cc.ScrollView)\r\n//         var content = scrollview.content;\r\n//         var item = content.children[0];\r\n\r\n//         var DeskScene = this.node.parent.getComponent(\"DeskScene\");\r\n//         var listFrameName;\r\n//         if(DeskScene && DeskScene.IsCXZ()){\r\n//             listFrameName = \"cxz_double\";\r\n//         }\r\n//         else{\r\n//             listFrameName = \"yjly_double\";\r\n//         }\r\n\r\n//         var spriteFrame = this.helpAtlas.getSpriteFrame(listFrameName);\r\n//         item.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n\r\n//         var rect = spriteFrame.getRect();\r\n\r\n//         content.setContentSize(cc.size(rect.width, rect.height + 100));\r\n\r\n//         scrollview.scrollToTop(0);\r\n\r\n//     },\r\n\r\n//     onGameRuleClicked: function (event) {\r\n\r\n//         this.game_toggle1.getComponent(cc.Toggle).isChecked = false;\r\n//         this.game_toggle2.getComponent(cc.Toggle).isChecked = true;\r\n\r\n//         var scrollview = this.game_help_scrollView.node.getComponent(cc.ScrollView)\r\n//         var content = scrollview.content;\r\n//         var item = content.children[0];\r\n\r\n//         var DeskScene = this.node.parent.getComponent(\"DeskScene\");\r\n//         var spriteFrame\r\n//         if(DeskScene && DeskScene.IsCXZ()){\r\n//             spriteFrame = this.m_cxzRule;\r\n//         }\r\n//         else{\r\n//             spriteFrame = this.m_yjlyRuleFrame;\r\n//         }\r\n\r\n//         if(spriteFrame){\r\n//             item.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n//         }\r\n        \r\n//         var rect = spriteFrame.getRect();\r\n\r\n//         content.setContentSize(cc.size(rect.width, rect.height + 100));\r\n\r\n//         scrollview.scrollToTop(0);\r\n//     },\r\n\r\ncloseAndChangeScaleAction(){\r\n    var self = this;\r\n    // self.node.active = false;\r\n    var action1 = cc.scaleTo(0.2, 0.3, 0.3);\r\n    var action2 =cc.fadeOut(0.01);\r\n    \r\n    var action3 = cc.callFunc(function(){\r\n        self.node.active = false;\r\n        \r\n        TSCommon.dispatchEvent(HallResources.onChangeShadow,false);\r\n    });\r\n    var sequence = cc.sequence(action1, action2, action3);\r\n    this.node.runAction(sequence);\r\n},\r\n\r\n    onCloseClicked: function () {\r\n        HallResources.getInstance().playCloseEffect();\r\n        // this.node.active = false;\r\n        this.closeAndChangeScaleAction();\r\n    },\r\n\r\n});\r\n\r\nmodule.exports = gameRuleLayer;"]}