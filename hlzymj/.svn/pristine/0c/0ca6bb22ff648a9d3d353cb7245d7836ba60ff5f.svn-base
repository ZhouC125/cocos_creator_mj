(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/scripts/hall/Loading.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, '0dfad2izcNLmL4oWKFoQFqb', 'Loading', __filename);
// scripts/hall/Loading.js

"use strict";

var Loading = cc.Class({
    extends: cc.Component,

    properties: {
        point1: {
            default: null,
            type: cc.Node
        }
    },
    onLoad: function onLoad() {
        this.initUI();
    },

    initUI: function initUI() {
        var effectNode = this.node.getChildByName("shadow_sp").getChildByName("guang_quan_sp");
        var rotate = cc.rotateBy(2, 360);
        var repeatForever = cc.repeatForever(rotate);
        effectNode.runAction(repeatForever);
    },

    showActive: function showActive() {
        var self = this;
        self.time = 0;
        var func = cc.callFunc(function () {
            self.time = self.time + 1;
            if (self.time > 99) {
                self.time = 99;
            }
            self.point1.getComponent("cc.Label").string = self.time + "%";
            console.log();
        });
        var delayTime = cc.delayTime(0.05);
        var sequence = cc.repeatForever(cc.sequence(func, delayTime));

        var repeatForever = cc.repeatForever(sequence);
        this.point1.runAction(repeatForever);

        // this.point2.active = true; 
        // this.point3.active = true; 
        // var delayTime2 = cc.delayTime(1);
        // var showPoint2 = cc.callFunc(function () {
        //    this.point2.active = true; 
        // }, this);
        // var delayTime = cc.delayTime(0.5);
        // var hidePoint2 = cc.callFunc(function () {
        //     this.point2.active = false; 
        //  }, this);
        // var sequence1 = cc.repeatForever(cc.sequence(delayTime,showPoint2, delayTime2, hidePoint2));
        // this.point2.runAction(sequence1);

        // var showPoint3 = cc.callFunc(function () {
        //     this.point3.active = true; 
        //  }, this);

        //  var hidePoint3 = cc.callFunc(function () {
        //      this.point3.active = false; 
        //   }, this);
        //  var sequence2 = cc.repeatForever(cc.sequence(delayTime2,showPoint3, delayTime, hidePoint3));
        //  this.point3.runAction(sequence2);
    }

});
module.exports = Loading;

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=Loading.js.map
        