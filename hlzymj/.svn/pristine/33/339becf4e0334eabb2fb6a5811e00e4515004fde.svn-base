{"version":3,"sources":["ClientFrame.ts"],"names":[],"mappings":";;;;;AAAC,oDAAiD;AAClD,2CAAwC;AACxC,yCAAsC;AACtC,yCAAsC;AAKtC,kDAA+C;AAC/C;IAUI,qBAAY,IAAa,EAAC,OAAgB;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,EAAa,CAAC;QAC3C,IAAI,CAAC,KAAK,EAAE,CAAC;IACjB,CAAC;IAEM,2BAAK,GAAZ;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;QACtB,IAAI,CAAC,cAAc,GAAG,qBAAS,CAAC,iBAAiB,CAAC;IACtD,CAAC;IACM,+BAAS,GAAhB,UAAiB,MAAgB;QAC7B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;IAC1B,CAAC;IAEM,6BAAO,GAAd,UAAe,IAAsB;QACjC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,cAAc,GAAG,qBAAS,CAAC,iBAAiB,CAAC;IACtD,CAAC;IAEM,iCAAW,GAAlB,UAAmB,YAAoB;QACnC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,YAAY,GAAW,OAAO,CAAC;QACnC,IAAI,EAAE,GAAG,IAAI,qBAAS,EAAE,CAAC;QACzB,EAAE,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,WAAW,CAAC,qBAAS,CAAC,wBAAwB,EAAE,EAAE,CAAC,CAAC;QACzD,IAAI,OAAO,GAAG,IAAI,qBAAS,EAAE,CAAC;QAC9B,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACjD,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC;QAChD,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,qBAAS,CAAC,iCAAiC,EAAE,OAAO,CAAC,CAAC;QACvE,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAEM,iCAAW,GAAlB,UAAmB,KAAa,EAAE,GAAc;QAC5C,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IAC5C,CAAC;IAEM,iCAAW,GAAlB,UAAmB,GAAc;QAC7B,IAAI,OAAO,GAAW,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;QACrC,IAAI,OAAO,GAAG,CAAC;YACX,OAAO,KAAK,CAAC;QACjB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC5B,OAAO,IAAI,CAAC;SACf;QACD,IAAI,IAAI,GAAc,IAAI,qBAAS,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,MAAM,IAAI,qBAAS,CAAC,cAAc,EAAE;YACzC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;YACzD,OAAO,IAAI,CAAC;SACf;QACD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,kCAAY,GAApB,UAAqB,OAAc,EAAE,KAAY,EAAE,KAAe;QAC9D,IAAI,IAAI,GAAW,KAAK,CAAC,MAAM,CAAC;QAChC,IAAI,IAAI,GAAG,CAAC;YACR,OAAO;QAEX,IAAI,EAAa,CAAC;QAClB,IAAI,CAAS,CAAC;QACd,QAAQ,KAAK,EAAE;YACX,KAAK,qBAAS,CAAC,yBAAyB;gBACpC;oBACI,IAAI,IAAI,IAAI,CAAC,EAAE;wBACX,OAAO,CAAC,GAAG,CAAC,kEAAkE,CAAC,CAAC;wBAChF,OAAO;qBACV;oBACD,IAAI,CAAC,cAAc,GAAG,qBAAS,CAAC,oBAAoB,CAAC;oBACrD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,EAAE,GAAG,IAAI,qBAAS,EAAE,CAAC;oBACrB,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;oBAClC,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;oBAC/B,MAAM;iBACT;YACL,KAAK,qBAAS,CAAC,gBAAgB;gBAC3B;oBACI,IAAI,IAAI,IAAI,CAAC,EAAE;wBACX,OAAO,CAAC,GAAG,CAAC,kEAAkE,CAAC,CAAC;wBAChF,OAAO;qBACV;oBACD,IAAI,CAAC,cAAc,GAAG,qBAAS,CAAC,oBAAoB,CAAC;oBACrD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAC1B,EAAE,GAAG,IAAI,qBAAS,EAAE,CAAC;oBACrB,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;oBAC1C,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC;oBAChB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;oBAC/B,MAAM;iBACT;YACL,KAAK,qBAAS,CAAC,sBAAsB;gBACjC;oBACI,OAAO,CAAC,GAAG,CAAC,wDAAwD,CAAC,CAAC;oBACtE,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,6BAAa,CAAC,cAAc,EAAE,6BAAa,CAAC,iBAAiB,CAAC,CAAC;oBAC3F,IAAI,CAAC,cAAc,GAAG,qBAAS,CAAC,oBAAoB,CAAC;oBACrD,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAE1B,IAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE;wBACvB,IAAI,CAAC,WAAW,CAAC,qBAAS,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;oBAE/D,EAAE,GAAG,IAAI,qBAAS,EAAE,CAAC;oBACrB,EAAE,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC;oBAClC,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC;oBAEhB,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;oBAC/B,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;oBAC1B,MAAM;iBACT;YACL,KAAK,qBAAS,CAAC,oBAAoB;gBAC/B,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;gBACtC,IAAI,CAAC,cAAc,GAAG,qBAAS,CAAC,iBAAiB,CAAC;gBAClD,gBAAgB;gBAChB,4FAA4F;gBAC5F,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;gBAC7B,MAAM;YACV,KAAK,qBAAS,CAAC,uBAAuB;gBAClC;oBACI,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;oBACvC,IAAI,CAAC,cAAc,GAAG,qBAAS,CAAC,iBAAiB,CAAC;oBAClD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;oBACzB,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,EAAE,6BAAa,CAAC,gBAAgB,EAAE,6BAAa,CAAC,cAAc,CAAC,CAAC;oBAE1F,SAAS;oBACT;;;uBAGG;iBACN;gBACD,MAAM;YAGV,KAAK,qBAAS,CAAC,qBAAqB;gBAChC;oBACI,IAAI,QAAQ,GAAW,KAAK,CAAC,eAAe,EAAE,CAAC;oBAC/C,OAAO;oBACP,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;oBACnC,MAAM;iBACT;YACL,KAAK,qBAAS,CAAC,qBAAqB;gBAChC;oBACI,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;oBAC7C,IAAI,IAAI,GAAG,CAAC,EAAE;wBACV,OAAO,CAAC,GAAG,CAAC,2DAA2D,CAAC,CAAC;wBACzE,MAAM;qBACT;oBACD,IAAI,MAAM,GAAW,KAAK,CAAC,OAAO,EAAE,CAAC;oBAErC,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,6BAAa,CAAC,iBAAiB,EAAE,6BAAa,CAAC,cAAc,CAAC,CAAC;oBAC/F,MAAM;iBACT;YACL,KAAK,qBAAS,CAAC,gBAAgB,CAAC,CAAC;gBAC7B,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;gBACzC,MAAM;aACT;YACD,KAAK,qBAAS,CAAC,wBAAwB,CAAC,CAAC;gBACrC,CAAC;gBACD,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,mBAAQ,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzE,MAAM;aACT;YACD;gBACI,OAAO,CAAC,GAAG,CAAC,uDAAuD,GAAG,KAAK,CAAC,CAAC;gBAC7E,MAAM;SACb;IACL,CAAC;IAEO,wCAAkB,GAA1B,UAA2B,KAAa,EAAE,SAAiB,EAAE,SAAiB;QAC1E,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;YACb,KAAK,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,EAAE;gBAChD,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;aAC7D;SACJ;;YAEG,IAAI,CAAC,MAAM,CAAC,oBAAoB,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IACtE,CAAC;IACL,kBAAC;AAAD,CA/LA,AA+LC,IAAA;AA/LY,kCAAW","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\hall\\gamelib\\frame","sourcesContent":["ï»¿import {ByteArray} from \"../../common/ByteArray\";\r\nimport {TSCommon} from \"../../TSCommon\";\r\nimport {FrameCmds} from \"./FrameCmds\";\r\nimport {GAME_DATA} from \"./GAME_DATA\";\r\nimport {GameRoom} from \"../room/GameRoom\";\r\nimport {CGameLib} from \"../CGameLib\";\r\nimport {UserInfo} from \"../UserInfo\";\r\nimport {IClientFrameSink} from \"../IClientFrameSink\";\r\nimport {gamelibcommon} from \"../gamelibcommon\";\r\nexport class ClientFrame {\r\n    private m_sink: IClientFrameSink;\r\n    private _mySelf: UserInfo;\r\n    private m_gameRoom: GameRoom;\r\n    private m_pGameLib: CGameLib;\r\n    private m_bDismissed: boolean;\r\n    private m_chairCount: number;\r\n    private m_nSceneStatus: number;\r\n    private m_cachedCmds: ByteArray[];\r\n\r\n    constructor(room:GameRoom,gameLib:CGameLib) {\r\n        this.m_sink = null;\r\n        this._mySelf = null;\r\n        this.m_gameRoom = room;\r\n        this.m_pGameLib = gameLib;\r\n        this.m_cachedCmds = new Array<ByteArray>();\r\n        this.clear();\r\n    }\r\n\r\n    public clear() {\r\n        this._mySelf = null;       \r\n        this.m_cachedCmds.splice(0);\r\n        this.m_bDismissed = false;\r\n        this.m_chairCount = 2;\r\n        this.m_nSceneStatus = FrameCmds.SCENE_STATUS_FREE;\r\n    }\r\n    public setMyself(myself: UserInfo) {\r\n        this._mySelf = myself;\r\n    }\r\n\r\n    public setSink(sink: IClientFrameSink) {\r\n        this.m_sink = sink;\r\n        this.m_nSceneStatus = FrameCmds.SCENE_STATUS_FREE;\r\n    }\r\n\r\n    public meEnterGame(cbChairCount: number) {\r\n        console.log(\"meEnterGame\");\r\n        this.m_chairCount = cbChairCount;\r\n        var frameVersion: number = 1310761;\r\n        var ba = new ByteArray();\r\n        ba.writeInt(frameVersion);\r\n        this.sendGameCmd(FrameCmds.CLIENTSITE_FRAME_VERSION, ba);\r\n        var version = new ByteArray();\r\n        version.writeInt(this.m_sink.onGetMainVersion());\r\n        version.writeInt(this.m_sink.onGetSubVersion());\r\n        version.writeInt(0);\r\n        this.sendGameCmd(FrameCmds.CLIENTSITE_REQUEST_VERIFY_VERSION, version);\r\n        this.m_cachedCmds.splice(0);\r\n    }\r\n\r\n    public sendGameCmd(cmdID: number, buf: ByteArray) {\r\n        this.m_gameRoom.sendGameCmd(cmdID, buf);\r\n    }\r\n\r\n    public recvGameCmd(buf: ByteArray): boolean{\r\n        var dataLen: number = buf.length - 2;\r\n        if (dataLen < 0)\r\n            return false;\r\n        if (this.m_sink == null) {\r\n            this.m_cachedCmds.push(buf);\r\n            return true;\r\n        }\r\n        var data: GAME_DATA = new GAME_DATA(buf);        \r\n        if (data.cCmdID >= FrameCmds.SERVERSITE_MSG) {\r\n            this.recvFrameCmd(data.cChairID, data.cCmdID, data.data);\r\n            return true;\r\n        }\r\n        this.m_sink.onGameMessage(data.cChairID, data.cCmdID, data.data);\r\n        return true;\r\n    }\r\n\r\n    private recvFrameCmd(chairID:number, cmdID:number, lpBuf:ByteArray):void{\r\n        var nLen: number = lpBuf.length;\r\n        if (nLen < 0)\r\n            return;\r\n\r\n        var bt: ByteArray;\r\n        var i: number;\r\n        switch (cmdID) {\r\n            case FrameCmds.SERVERSITE_PERSONAL_SCENE:\r\n                {\r\n                    if (nLen <= 0) {\r\n                        console.log(\"CClientFrame::RecvFrameMsg() error -- SERVERSITE_SCENE nLen <= 0\");\r\n                        return;\r\n                    }\r\n                    this.m_nSceneStatus = FrameCmds.SCENE_STATUS_PLAYING;\r\n                    this.m_bDismissed = false;\r\n                    bt = new ByteArray();\r\n                    bt.writeBytes(lpBuf, 4, nLen - 4);\r\n                    bt.position = 0;\r\n                    this.m_sink.onSceneChanged(bt);\r\n                    break;\r\n                }\r\n            case FrameCmds.SERVERSITE_SCENE:\r\n                {\r\n                    if (nLen <= 0) {\r\n                        console.log(\"CClientFrame::RecvFrameMsg() error -- SERVERSITE_SCENE nLen <= 0\");\r\n                        return;\r\n                    }                    \r\n                    this.m_nSceneStatus = FrameCmds.SCENE_STATUS_PLAYING;\r\n                    this.m_bDismissed = false;\r\n                    bt = new ByteArray();\r\n                    bt.writeBytes(lpBuf, 4, lpBuf.length - 4);\r\n                    bt.position = 0;\r\n                    this.m_sink.onSceneChanged(bt);\r\n                    break;\r\n                }\r\n            case FrameCmds.SERVERSITE_FIRST_SCENE:\r\n                {\r\n                    console.log(\"CClientFrame::RecvFrameMsg() -- SERVERSITE_FIRST_SCENE\");\r\n                    this.changePlayerStatus(-1, gamelibcommon.USER_PLAY_GAME, gamelibcommon.USER_READY_STATUS);\r\n                    this.m_nSceneStatus = FrameCmds.SCENE_STATUS_PLAYING;\r\n                    this.m_bDismissed = false;\r\n\r\n                    if (this._mySelf.isPlayer())\r\n                        this.sendGameCmd(FrameCmds.CLIENTSITE_CONFIRM_START, null);\r\n\r\n                    bt = new ByteArray();\r\n                    bt.writeBytes(lpBuf, 4, nLen - 4);\r\n                    bt.position = 0;\r\n\r\n                    this.m_sink.onSceneChanged(bt);\r\n                    this.m_sink.onGameStart();\r\n                    break;\r\n                }\r\n            case FrameCmds.SERVERSITE_GAME_OVER:\r\n                console.log(\"--SERVERSITE_GAME_OVER\");\r\n                this.m_nSceneStatus = FrameCmds.SCENE_STATUS_FREE;\r\n                // æææäººçç¶ææ¹ä¸ºfree\r\n                //this.changePlayerStatus(-1, gamelibcommon.USER_FREE_STATUS, gamelibcommon.USER_PLAY_GAME);\r\n                this.m_sink.onGameEnd(lpBuf);\r\n                break;           \r\n            case FrameCmds.SERVERSITE_GAME_DISMISS:\r\n                {\r\n                    console.log(\"SERVERSITE_GAME_DISMISS\");\r\n                    this.m_nSceneStatus = FrameCmds.SCENE_STATUS_FREE;\r\n                    this.m_bDismissed = true;\r\n                    this.changePlayerStatus(-1, gamelibcommon.USER_FREE_STATUS, gamelibcommon.USER_PLAY_GAME);\r\n\r\n                    // æ¾ç¤ºè§£æ£çç±\r\n                    /*if (nLen > 0) {\r\n                        //ShowSystemMsg(lpBuf.toString());\r\n                        this.m_sink.onDispatch(FameCmds..DISPID_ON_GAME_DISMISS, 0, 0);\r\n                    }*/\r\n                }\r\n                break;\r\n           \r\n            \r\n            case FrameCmds.SERVERSITE_GAMEOPTION:\r\n                {\r\n                    var dwOption: number = lpBuf.readUnsignedInt();\r\n                    // éç¥é»è¾\r\n                    this.m_sink.onGameOption(dwOption);\r\n                    break;\r\n                }\r\n            case FrameCmds.SERVERSITE_SOFT_READY:\r\n                {\r\n                    console.log(\"Recv player soft ready signal\");\r\n                    if (nLen < 4) {\r\n                        console.log(\"RecvFrameMsg--SERVERSITE_GAMEOPTION error,mismatch length\");\r\n                        break;\r\n                    }\r\n                    var nChair: number = lpBuf.readInt();\r\n\r\n                    this.changePlayerStatus(nChair, gamelibcommon.USER_READY_STATUS, gamelibcommon.USER_SIT_TABLE);\r\n                    break;\r\n                }\r\n            case FrameCmds.SERVERSITE_SOUND: {\r\n                this.m_sink.onTableSound(chairID, lpBuf);\r\n                break;\r\n            }\r\n            case FrameCmds.SERVERSITE_SYSTEMMESSAGE: {\r\n                ;\r\n                this.m_sink.onGameSystemMsg(TSCommon.readGbkString(lpBuf, lpBuf.length));\r\n                break;\r\n            }            \r\n            default:\r\n                console.log(\"--CClient::GameMessage, recieved an unknown msg, id= \" + cmdID);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private changePlayerStatus(chair: number, newStatus: number, oldStatus: number): void {\r\n        if (chair == -1) {\r\n            for (var i: number = 0; i < this.m_chairCount; i++) {\r\n                this.m_sink.onPlayerStateChanged(i, oldStatus, newStatus);\r\n            }\r\n        }\r\n        else\r\n            this.m_sink.onPlayerStateChanged(chair, oldStatus, newStatus);\r\n    }\r\n}"]}