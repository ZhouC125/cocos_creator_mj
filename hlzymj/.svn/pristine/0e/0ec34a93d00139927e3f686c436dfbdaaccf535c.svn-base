"use strict";
cc._RF.push(module, '97274zlcidHeKX6aE/RJ6sx', 'helpLayer');
// scripts/hall/game/help/helpLayer.js

"use strict";

cc.Class({
    extends: cc.Component,

    properties: {
        game_toggle1: {
            default: null,
            type: cc.Toggle
        },

        game_toggle2: {
            default: null,
            type: cc.Toggle
        },

        game_help_scrollView: {
            default: null,
            type: cc.ScrollView
        },

        game_list_scrollView: {
            default: null,
            type: cc.ScrollView
        },

        helpAtlas: {
            default: null,
            type: cc.SpriteAtlas
        }
    },

    onLoad: function onLoad() {
        var self = this;
        cc.loader.loadRes("texture/game/help/yjly_rule1", cc.SpriteFrame, function (err, spriteFrame) {
            if (!err) {
                self.m_yjlyRuleFrame = spriteFrame;
            }
        });

        cc.loader.loadRes("texture/game/help/cxz_rule1", cc.SpriteFrame, function (err, spriteFrame) {
            if (!err) {
                self.m_cxzRule = spriteFrame;
            }
        });

        var windowSize = cc.view.getVisibleSize();
        this.node.getChildByName("shadow_bg").setContentSize(windowSize);
    },

    onEnable: function onEnable() {
        this.initUI();
    },

    initUI: function initUI() {
        var DeskScene = this.node.parent.getComponent("DeskScene");

        var isCXZ = false;
        if (DeskScene && DeskScene.IsCXZ()) {
            isCXZ = true;
        }

        var iconFrameName;
        var listFrameName;

        if (isCXZ) {
            iconFrameName = "cxz_icon_press";
            listFrameName = "cxz_double";
        } else {
            iconFrameName = "yjly_icon_press";
            listFrameName = "yjly_double";
        }

        var gameListScrollview = this.game_list_scrollView.node.getComponent(cc.ScrollView);
        var listContent = gameListScrollview.content;
        var listItem = listContent.children[0];

        var spriteFrame = this.helpAtlas.getSpriteFrame(iconFrameName);
        if (spriteFrame) {
            listItem.getComponent(cc.Sprite).spriteFrame = spriteFrame;
        }

        var scrollview = this.game_help_scrollView.node.getComponent(cc.ScrollView);
        var content = scrollview.content;
        var item = content.children[0];

        var spriteFrame = this.helpAtlas.getSpriteFrame(listFrameName);
        if (spriteFrame) {
            item.getComponent(cc.Sprite).spriteFrame = spriteFrame;
        }

        var rect = spriteFrame.getRect();
        content.setContentSize(cc.size(rect.width, rect.height + 60));
        scrollview.scrollToTop(0);
    },

    onGameIntroClicked: function onGameIntroClicked(event) {

        this.game_toggle1.getComponent(cc.Toggle).isChecked = true;
        this.game_toggle2.getComponent(cc.Toggle).isChecked = false;

        var scrollview = this.game_help_scrollView.node.getComponent(cc.ScrollView);
        var content = scrollview.content;
        var item = content.children[0];

        var DeskScene = this.node.parent.getComponent("DeskScene");
        var listFrameName;
        if (DeskScene && DeskScene.IsCXZ()) {
            listFrameName = "cxz_double";
        } else {
            listFrameName = "yjly_double";
        }

        var spriteFrame = this.helpAtlas.getSpriteFrame(listFrameName);
        item.getComponent(cc.Sprite).spriteFrame = spriteFrame;

        var rect = spriteFrame.getRect();

        content.setContentSize(cc.size(rect.width, rect.height + 100));

        scrollview.scrollToTop(0);
    },

    onGameRuleClicked: function onGameRuleClicked(event) {

        this.game_toggle1.getComponent(cc.Toggle).isChecked = false;
        this.game_toggle2.getComponent(cc.Toggle).isChecked = true;

        var scrollview = this.game_help_scrollView.node.getComponent(cc.ScrollView);
        var content = scrollview.content;
        var item = content.children[0];

        var DeskScene = this.node.parent.getComponent("DeskScene");
        var spriteFrame;
        if (DeskScene && DeskScene.IsCXZ()) {
            spriteFrame = this.m_cxzRule;
        } else {
            spriteFrame = this.m_yjlyRuleFrame;
        }

        if (spriteFrame) {
            item.getComponent(cc.Sprite).spriteFrame = spriteFrame;
        }

        var rect = spriteFrame.getRect();

        content.setContentSize(cc.size(rect.width, rect.height + 100));

        scrollview.scrollToTop(0);
    },

    onCloseClicked: function onCloseClicked() {
        this.node.active = false;
    }

});

cc._RF.pop();