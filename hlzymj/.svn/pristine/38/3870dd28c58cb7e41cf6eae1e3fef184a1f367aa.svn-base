(function() {"use strict";var __module = CC_EDITOR ? module : {exports:{}};var __filename = 'preview-scripts/assets/scripts/hall/mall/MallLayer.js';var __require = CC_EDITOR ? function (request) {return cc.require(request, require);} : function (request) {return cc.require(request, __filename);};function __define (exports, require, module) {"use strict";
cc._RF.push(module, 'b2e42ndTDhDMIgcKq5rHG0U', 'MallLayer', __filename);
// scripts/hall/mall/MallLayer.js

"use strict";

var _TSCommon = require("TSCommon");

var HallResources = require("HallResources");
var MallLayer = cc.Class({
    extends: cc.Component,

    properties: {
        bg: {
            default: null,
            type: cc.Node
        },
        goldToggle: {
            default: null,
            type: cc.Toggle
        },
        diamondToggle: {
            default: null,
            type: cc.Toggle
        },
        mallList: {
            default: null,
            type: cc.ScrollView
        }
    },

    // LIFE-CYCLE CALLBACKS:

    onLoad: function onLoad() {
        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);
        this.goldToggle.node.on('toggle', this.showGoldNode, this);
        this.diamondToggle.node.on('toggle', this.showDiamondNode, this);
    },

    onTouch: function onTouch(event) {
        var poisition = event.touch.getLocation();
        var locationInNode = this.bg.convertToNodeSpace(poisition);
        var s = this.bg.getContentSize();
        var rect = cc.rect(0, 0, s.width, s.height);
        if (cc.rectContainsPoint(rect, locationInNode)) {
            // this.node.active = true;
        } else {
            // this.node.active = false;
            this.closeAndChangeScaleAction();
        }
    },

    start: function start() {},

    closeAndChangeScaleAction: function closeAndChangeScaleAction() {
        var self = this;
        // self.node.active = false;
        var action1 = cc.scaleTo(0.2, 0.3, 0.3);
        var action2 = cc.fadeOut(0.01);

        var action3 = cc.callFunc(function () {
            self.node.active = false;
            _TSCommon.TSCommon.dispatchEvent(HallResources.onChangeShadow, false);
        });
        var sequence = cc.sequence(action1, action2, action3);
        this.node.runAction(sequence);
    },


    clickCloseBtn: function clickCloseBtn() {
        HallResources.getInstance().playCloseEffect();
        // this.node.active = false;
        this.closeAndChangeScaleAction();
    },

    showGoldNode: function showGoldNode() {
        this.goldToggle.isChecked = true;
        this.diamondToggle.isChecked = false;
        this.mallList.getComponent("MallScrollList").initData(1);
    },

    showDiamondNode: function showDiamondNode() {

        if (cc.sys.os == cc.sys.OS_IOS) {
            this.closeAndChangeScaleAction();
            this.node.parent.getComponent("HallPlatformInfo").openIosPlatformShare();
        } else {
            this.goldToggle.isChecked = false;
            this.diamondToggle.isChecked = true;
            this.mallList.getComponent("MallScrollList").initData(2);
        }
    }
    // update (dt) {},

});

module.exports = MallLayer;

cc._RF.pop();
        }
        if (CC_EDITOR) {
            __define(__module.exports, __require, __module);
        }
        else {
            cc.registerModuleFunc(__filename, function () {
                __define(__module.exports, __require, __module);
            });
        }
        })();
        //# sourceMappingURL=MallLayer.js.map
        