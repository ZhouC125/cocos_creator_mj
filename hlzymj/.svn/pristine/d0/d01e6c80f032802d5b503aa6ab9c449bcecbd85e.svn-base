{"version":3,"sources":["WebRequest.js"],"names":["WebRequest","cc","Class","_callBack","getData","url","data","callback","post","self","xhr","loader","getXMLHttpRequest","forEach","eventname","onreadystatechange","readyState","status","response","timeout","open","sys","isNative","setRequestHeader","send","module","exports"],"mappings":";;;;;;AACA,IAAIA,aAAaC,GAAGC,KAAH,CAAS;AACtBC,eAAW,IADW;AAEtBC,aAAS,iBAAUC,GAAV,EAAeC,IAAf,EAAqBC,QAArB,EAA+BC,IAA/B,EAAqC;AAC1C,aAAKL,SAAL,GAAiBI,QAAjB;AACA,YAAIE,OAAO,IAAX;AACA,YAAIC,MAAMT,GAAGU,MAAH,CAAUC,iBAAV,EAAV;AACA;AACA,SAAC,WAAD,EAAc,OAAd,EAAuB,OAAvB,EAAgC,MAAhC,EAAwC,SAAxC,EAAmD,SAAnD,EAA8DC,OAA9D,CAAsE,UAAUC,SAAV,EAAqB;AACvFJ,gBAAI,OAAOI,SAAX,IAAwB,YAAY;AAChC;AACA,oBAAIA,aAAa,OAAb,IAAwBA,aAAa,OAArC,IAAgDA,aAAa,SAAjE,EAA4E;AACxE,wBAAIL,KAAKN,SAAL,IAAkB,IAAtB,EAA4B;AACxBM,6BAAKN,SAAL,CAAe,KAAf,EAAsB,EAAtB;AACH;AACJ;AACJ,aAPD;AAQH,SATD;;AAWA;AACAO,YAAIK,kBAAJ,GAAyB,YAAY;AACjC;AACA,gBAAIL,IAAIM,UAAJ,KAAmB,CAAnB,IAAyBN,IAAIO,MAAJ,IAAc,GAAd,IAAqBP,IAAIO,MAAJ,GAAa,GAA/D,EAAqE;AACjE,oBAAIR,KAAKN,SAAL,IAAkB,IAAtB,EAA4B;AACxB;AACA;AACA;AACAM,yBAAKN,SAAL,CAAe,IAAf,EAAqBO,IAAIQ,QAAzB;AACH;AACJ;AACJ,SAVD;AAWAR,YAAIS,OAAJ,GAAc,IAAd,CA5B0C,CA4BvB;AACnB,YAAIX,QAAQ,IAAR,IAAgBA,QAAQ,KAA5B,EAAmC;AAC/B,gBAAGF,QAAO,EAAP,IAAaA,QAAO,IAAvB,EACA;AACII,oBAAIU,IAAJ,CAAS,KAAT,EAAgBf,GAAhB,EAAqB,IAArB;AACH,aAHD,MAKA;AACIK,oBAAIU,IAAJ,CAAS,KAAT,EAAgBf,MAAM,GAAN,GAAYC,IAA5B,EAAkC,IAAlC;AACH;;AAED,gBAAIL,GAAGoB,GAAH,CAAOC,QAAX,EAAqB;AACjBZ,oBAAIa,gBAAJ,CAAqB,iBAArB,EAAwC,cAAxC;AACH;AACDb,gBAAIc,IAAJ;AACH,SAdD,MAeK;AACD;AACAd,gBAAIU,IAAJ,CAAS,MAAT,EAAiBf,GAAjB;AACA;AACA;AACAK,gBAAIa,gBAAJ,CAAqB,cAArB,EAAqC,mCAArC;AACA;AACA;AACAb,gBAAIc,IAAJ,CAASlB,IAAT;AACH;AAEJ;AAzDqB,CAAT,CAAjB;;AA4DAmB,OAAOC,OAAP,GAAiB1B,UAAjB","file":"WebRequest.js","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\hall\\common","sourcesContent":["\r\nvar WebRequest = cc.Class({\r\n    _callBack: null,\r\n    getData: function (url, data, callback, post) {\r\n        this._callBack = callback;\r\n        var self = this;\r\n        var xhr = cc.loader.getXMLHttpRequest();\r\n        // Simple events\r\n        ['loadstart', 'abort', 'error', 'load', 'loadend', 'timeout'].forEach(function (eventname) {\r\n            xhr[\"on\" + eventname] = function () {\r\n                //console.log(\"WebRequest.getData event = \" + eventname);\r\n                if (eventname == 'abort' || eventname == 'error' || eventname == 'timeout') {\r\n                    if (self._callBack != null) {\r\n                        self._callBack(false, \"\");\r\n                    }\r\n                }\r\n            };\r\n        });\r\n\r\n        // Special event\r\n        xhr.onreadystatechange = function () {\r\n            //console.log(\"onreadystatechange code = \" + xhr.readyState + \",status = \" + xhr.status);\r\n            if (xhr.readyState === 4 && (xhr.status >= 200 && xhr.status < 300)) {\r\n                if (self._callBack != null) {\r\n                    // var XmlToJson = require('XmlToJson');\r\n                    // var xmlToJson = new  XmlToJson();\r\n                    // var jsonData = JSON.stringify(xmlToJson.parse(xhr.responseText));                    \r\n                    self._callBack(true, xhr.response);                    \r\n                }\r\n            }\r\n        };\r\n        xhr.timeout = 5000;//5 seconds for timeout\r\n        if (post == null || post == false) {\r\n            if(data ==\"\" || data ==null)\r\n            {\r\n                xhr.open(\"GET\", url, true);\r\n            }\r\n            else\r\n            {\r\n                xhr.open(\"GET\", url + \"?\" + data, true);\r\n            }\r\n           \r\n            if (cc.sys.isNative) {\r\n                xhr.setRequestHeader(\"Accept-Encoding\", \"gzip,deflate\");\r\n            }\r\n            xhr.send();\r\n        }\r\n        else {\r\n            //console.log(\"open url = \" + url + \",data = \"+ data);\r\n            xhr.open(\"POST\", url);\r\n            //set Content-type \"text/plain\" to post ArrayBuffer or ArrayBufferView\r\n            // xhr.setRequestHeader(\"Content-Type\",\"text/plain\");\r\n            xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n            // Uint8Array is an ArrayBufferView\r\n            //xhr.send(new Uint8Array([1,2,3,4,5]));\r\n            xhr.send(data);\r\n        }\r\n\r\n    },\r\n});\r\n\r\nmodule.exports = WebRequest;"]}