{"version":3,"sources":["..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\hall\\gamelib\\room/assets\\scripts\\hall\\gamelib\\room\\CMD_GR_Logon_ByVnet.ts"],"names":[],"mappings":";;;;;AAAC,oDAAiD;AAClD,kDAA+C;AAC/C,oDAAiD;AACjD,oDAAiD;AACjD,2CAAwC;AACxC;IASI;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,+BAAc,EAAE,CAAC;QACxC,IAAI,CAAC,UAAU,GAAG,IAAI,6BAAa,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,+BAAc,EAAE,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;QACjB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IAC1B,CAAC;IAED,uCAAS,GAAT;QACI,IAAI,EAAE,GAAc,IAAI,qBAAS,EAAE,CAAC;QACpC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC5B,mBAAQ,CAAC,qBAAqB,CAAC,EAAE,EAAE,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;QAC/B,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAC/B,mBAAQ,CAAC,qBAAqB,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;QACzD,OAAO,EAAE,CAAC;IACd,CAAC;IACL,0BAAC;AAAD,CA9BA,AA8BC,IAAA;AA9BY,kDAAmB","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\..\\assets\\scripts\\hall\\gamelib\\room","sourcesContent":["ï»¿import {tagConnectInfo} from \"../tagConnectInfo\";\r\nimport {tagClientInfo} from \"../tagClientInfo\";\r\nimport {tagVersionInfo} from \"../tagVersionInfo\";\r\nimport {ByteArray} from \"../../common/ByteArray\";\r\nimport {TSCommon} from \"../../TSCommon\";\r\nexport class CMD_GR_Logon_ByVnet {\r\n    lUserDBID: number;\r\n    szEncryptPass: string;\r\n    ConnectInfo: tagConnectInfo;\r\n    ClientInfo: tagClientInfo;\r\n    VersionInfo: tagVersionInfo;\r\n    cbShake: number;\r\n    cbEnterType: number;\r\n    szTablePass: string;\r\n    constructor() {\r\n        this.ConnectInfo = new tagConnectInfo();\r\n        this.ClientInfo = new tagClientInfo();\r\n        this.VersionInfo = new tagVersionInfo();\r\n        this.cbShake = 0;\r\n        this.cbEnterType = 0;\r\n        this.szTablePass = \"\";\r\n    }\r\n\r\n    serialize(): ByteArray {\r\n        var ba: ByteArray = new ByteArray();\r\n        ba.writeInt(this.lUserDBID);\r\n        TSCommon.writeStringWithLength(ba, this.szEncryptPass, 64);\r\n        this.ConnectInfo.serialize(ba);\r\n        this.ClientInfo.serialize(ba);\r\n        this.VersionInfo.serialize(ba);\r\n        ba.writeByte(this.cbShake);\r\n        ba.writeByte(this.cbEnterType);\r\n        TSCommon.writeStringWithLength(ba, this.szTablePass, 16);\r\n        return ba;\r\n    }\r\n}"]}