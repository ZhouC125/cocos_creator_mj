"use strict";
cc._RF.push(module, '777efDeNqNGM7bo8dyausNp', 'aladinSDK');
// scripts/aladinSDK.JS

'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var AladinSDK = {
    cb: null,
    ReportTypes: {
        SHOW: '1_1',
        LOGIN: '1_2',
        OPEN_ID: '1_3',
        AUTH: '1_4',
        MORE_FOLD: '2_1', //展开
        MORE_CLICK: '2_2',
        MORE_LONG_CLICK: '2_3'
    },
    AdTypes: {
        MORE: 1,
        BOTTOM: 2,
        GDT: 3
    },
    _data: {
        init_suc: false,

        is_report: true,
        is_show_gdt: false,
        is_show_more: false,
        is_show_more_ad: false,
        nowClick: "",

        base_url: 'https://mprogram.boomegg.cn/sprogram/ads/c/ad',
        reportUrl: 'https://distribute-stats.boomegg.cn',
        // reportUrl : 'https://third-dev.boomegg.cn',


        appId: '',
        version: '0.0',

        //广告相关
        adunit: "adunit-00079fa466631527",
        moreAdGroup: [],
        bottomAdGroup: [],
        adInterval: 10000,
        more_timer: 0,
        bottom_timer: 0,
        gdt_timer: 0,
        currentMoreIndex: 0,
        currentBottomIndex: 0,
        bannerAd: 0,
        is_gdt_hide: false,
        bottom_scale: 1,
        bottom_pos: 20,
        more_bottom_pos: 100,
        gdt_width: 300,
        gdt_left: 0,
        gdt_top: 0,
        bannerAd_bottom: 0,
        gdtUidArr: [],

        //广告商、广告位相关
        Ads: '',
        AdsPos: '',
        Layers: 0,
        SourceAppId: '',
        openId: '',
        report_prefix1: '',
        report_prefix2: '',

        extraAppId: '',

        //设备信息
        mobileHeight: 0,
        mobileWidht: 0
    },
    _base64encode: function _base64encode(str) {
        var base64EncodeChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

        var out, i, len;
        var c1, c2, c3;

        len = str.length;
        i = 0;
        out = "";
        while (i < len) {
            c1 = str.charCodeAt(i++) & 0xff;
            if (i == len) {
                out += base64EncodeChars.charAt(c1 >> 2);
                out += base64EncodeChars.charAt((c1 & 0x3) << 4);
                out += "==";
                break;
            }
            c2 = str.charCodeAt(i++);
            if (i == len) {
                out += base64EncodeChars.charAt(c1 >> 2);
                out += base64EncodeChars.charAt((c1 & 0x3) << 4 | (c2 & 0xF0) >> 4);
                out += base64EncodeChars.charAt((c2 & 0xF) << 2);
                out += "=";
                break;
            }
            c3 = str.charCodeAt(i++);
            out += base64EncodeChars.charAt(c1 >> 2);
            out += base64EncodeChars.charAt((c1 & 0x3) << 4 | (c2 & 0xF0) >> 4);
            out += base64EncodeChars.charAt((c2 & 0xF) << 2 | (c3 & 0xC0) >> 6);
            out += base64EncodeChars.charAt(c3 & 0x3F);
        }
        return out;
    },
    _node_cache: {
        more_sprite: null,
        more_ad_sprite: null
    },
    _initSpirite: function _initSpirite(node, type) {
        var sp = node.getComponent(cc.Sprite);
        if (!sp) {
            sp = node.addComponent(cc.Sprite);
        }

        node.active = false;

        return sp;
    },
    _handleAdSource: function _handleAdSource() {
        var opts = wx.getLaunchOptionsSync();

        //上报  保存来自于参数
        var appId = '',
            Ads = '',
            AdsPos = '';
        var query = opts.query;
        if (query.scene) {
            //从二维码进入    scene 二维码规定格式为 目标小程序的Appid,ads,adsPos
            var scene = query.scene;
            if (scene) {
                var sceneArray = decodeURIComponent(scene).split(',');
                appId = sceneArray[0];
                Ads = sceneArray[1];
                AdsPos = sceneArray[2];
            }
        } else if (query.tgt && query.Ads && query.AdsPos) {
            // 来源小程序跳转  参数 以 path传递 pages/index/index?tgt=目标小程序appID&Ads=Ads&adsPos=adsPos
            appId = query.tgt;
            Ads = query.Ads;
            AdsPos = query.AdsPos;
        } else if (opts.referrerInfo && opts.referrerInfo.extraData) {
            /*来源小程序跳转  参数以
              extraData:{
                  tgt:APPID,
                  Ads:Ads,
                  AdsPos:AdsPos,
              }
            */
            var extraData = opts.referrerInfo.extraData;
            appId = extraData.tgt;
            Ads = extraData.Ads;
            AdsPos = extraData.AdsPos;
        }

        this._data.Ads = Ads;
        this._data.AdsPos = AdsPos;
        this._data.SourceAppId = appId;
    },
    init: function init(_appId, more_node, ad_node) {
        var ad_position_cb = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
        var version = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : '1.0';
        var is_report = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;

        if (!_appId || !more_node || !ad_node) {
            wx.showToast({
                title: '_appId,more_node,ad_node 有为空的参数',
                icon: 'none',
                duration: 2000
            });
        }

        this._node_cache.more_sprite = this._initSpirite(more_node);
        this._node_cache.more_ad_sprite = this._initSpirite(ad_node);
        this._data.is_report = is_report;
        this._data.appId = _appId;
        this._data.version = version;

        if (ad_position_cb) {
            AladinSDK.cb = ad_position_cb;
        }

        //onshow 时切换
        wx.onShow(function () {
            if (AladinSDK._data.nowClick == "more_ad_sprite") {
                //开timer
                AladinSDK._data.currentBottomIndex++;
                AladinSDK._data.currentBottomIndex = AladinSDK._data.currentBottomIndex % AladinSDK._data.bottomAdGroup.length;
                if (AladinSDK._data.bottomAdGroup.length <= 1) {
                    return;
                }
                AladinSDK.NextAd(AladinSDK.AdTypes.BOTTOM, AladinSDK._data.currentBottomIndex);
            } else {
                AladinSDK._data.currentMoreIndex++;
                AladinSDK._data.currentMoreIndex = AladinSDK._data.currentMoreIndex % AladinSDK._data.moreAdGroup.length;
                if (AladinSDK._data.moreAdGroup.length <= 1) {
                    return;
                }
                AladinSDK.NextAd(AladinSDK.AdTypes.MORE, AladinSDK._data.currentMoreIndex);
            }
        });

        //必要参数传成功了
        this._data.init_suc = true;

        //初始化上报参数
        this._init_report();
        //上报SHOW节点
        this.report(AladinSDK.ReportTypes.SHOW);

        //初始化更多好玩、广告相关
        this._getImgList().then(this._handleImgList);
    },

    //初始化上报共用信息
    _init_report: function _init_report() {
        this._handleAdSource();

        var opts = wx.getLaunchOptionsSync();
        var language = '';
        var equipment = '';
        var channel = '';
        var systerm = '';
        var wx_version = '';
        wx.getSystemInfo({ //获取系统信息
            success: function success(res) {
                language = res.language;
                equipment = res.platform;
                channel = res.model;
                systerm = res.system;
                wx_version = res.version;
                AladinSDK._data.mobileHeight = res.screenHeight;
                AladinSDK._data.mobileWidht = res.screenWidth;
                AladinSDK._data.mobileModel = res.model;
            }
        });

        AladinSDK._data.report_prefix1 = 't_event|distribute_all|';
        AladinSDK._data.report_prefix2 = equipment + '|' + channel + '|' + AladinSDK._data.version + '|' + systerm + '||||' + language + '||' + wx_version + '|' + AladinSDK._data.appId + '|' + AladinSDK._data.Ads + ' |' + AladinSDK._data.AdsPos + '|' + AladinSDK._data.Layers + '|0|';
    },

    _getCurrentDate: function _getCurrentDate() {
        var date = new Date();
        var seperator1 = "-";
        var year = date.getFullYear();
        var month = date.getMonth() + 1;
        var strDate = date.getDate();
        if (month >= 1 && month <= 9) {
            month = "0" + month;
        }
        if (strDate >= 0 && strDate <= 9) {
            strDate = "0" + strDate;
        }
        var currentdate = Number(year + month + strDate);
        return currentdate;
    },
    _getTimeStapm: function _getTimeStapm() {
        return Date.parse(new Date()) / 1000;
    },
    raw_report: function raw_report(data_req) {
        var baseCode = AladinSDK._base64encode(data_req);

        wx.request({
            url: AladinSDK._data.reportUrl + '/report',
            header: {
                'content-type': 'application/x-www-form-urlencoded'
            },
            data: {
                info: baseCode
            },
            method: 'post',
            success: function success(res) {},
            fail: function fail(res) {},
            complete: function complete(res) {}
        });
    },
    report: function report(get_type) {
        var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";

        if (!AladinSDK._data.init_suc || !AladinSDK._data.is_report) {
            return;
        }

        var arr = get_type.split('_');
        if (arr.length < 2) {
            wx.showToast({
                title: '参数传递错误',
                icon: 'none'
            });
            return;
        }

        if (get_type == AladinSDK.ReportTypes.OPEN_ID) {
            AladinSDK._data.openId = data;
        } else {
            AladinSDK._data.extraAppId = data;
        }

        var type = arr[0];
        var sub_type = arr[1];
        var str = AladinSDK._data.report_prefix1 + AladinSDK._getCurrentDate() + '|' + AladinSDK._getTimeStapm() + '|' + AladinSDK._data.report_prefix2 + AladinSDK._data.openId + '|' + type + '|' + sub_type + '|0|' + AladinSDK._data.extraAppId;
        AladinSDK.raw_report(str);
    },

    //获取img列表
    _getImgList: function _getImgList() {
        //请求列表
        return new Promise(function (resolve, reject) {
            wx.request({
                url: AladinSDK._data.base_url + '/moregame?id=' + AladinSDK._data.appId,
                header: {
                    'content-type': 'application/x-www-form-urlencoded'
                },
                method: 'GET',
                success: function success(res) {
                    resolve(res);
                },
                error: function error(res) {
                    wx.showToast({
                        title: res,
                        icon: 'none',
                        duration: 2000
                    });
                }
            });
        });
    },
    _handleImgList: function _handleImgList(data) {
        var resData = data.data.data;

        AladinSDK._data.moreAdGroup = resData.icon;
        AladinSDK._data.bottomAdGroup = resData.bottom;

        AladinSDK._data.timer = AladinSDK._data.adInterval = resData.interval;

        AladinSDK._data.is_show_more = AladinSDK._data.moreAdGroup.length > 0;
        AladinSDK._data.is_show_more_ad = AladinSDK._data.bottomAdGroup.length > 0;

        //AladinSDK._data.is_show_gdt = !!resData.gdt.trim();

        if (resData.gdt.trim() == "" || resData.gdt.trim() == "off") {
            AladinSDK._data.is_show_gdt = false;
        } else {
            AladinSDK._data.is_show_gdt = true;
            AladinSDK._data.is_show_more_ad = false;
        }

        if (AladinSDK._data.is_show_gdt) {
            if (resData.gdt.trim().indexOf(',') > 0) {
                AladinSDK._data.gdtUidArr = resData.gdt.trim().split(',');
                AladinSDK._data.adunit = AladinSDK._data.gdtUidArr[0];
            } else {
                AladinSDK._data.gdtUidArr.push(resData.gdt.trim());
                AladinSDK._data.adunit = resData.gdt.trim();
            }
        }

        //位置，缩放
        if (resData.bottom_scale) {
            AladinSDK._data.bottom_scale = resData.bottom_scale;
        }

        if (resData.bottom_pos) {
            AladinSDK._data.bottom_pos = resData.bottom_pos;
        }

        if (resData.more_bottom_pos) {
            AladinSDK._data.more_bottom_pos = resData.more_bottom_pos;
        }

        if (resData.gdt_width) {
            if (AladinSDK._data.mobileWidht - AladinSDK._data.gdt_width < 0) {
                AladinSDK._data.gdt_width = AladinSDK._data.mobileWidht;
                AladinSDK._data.gdt_left = 0;
            } else {
                AladinSDK._data.gdt_width = resData.gdt_width;
                AladinSDK._data.gdt_left = (AladinSDK._data.mobileWidht - AladinSDK._data.gdt_width) / 2;
            }
            if (AladinSDK._data.mobileModel == "iPhone X") {
                AladinSDK._data.gdt_top = AladinSDK._data.mobileHeight - AladinSDK._data.gdt_width * 108 / 375 + 15;
            } else {
                AladinSDK._data.gdt_top = AladinSDK._data.mobileHeight - AladinSDK._data.gdt_width * 108 / 375;
            }
        }

        AladinSDK._initAd();
    },
    _findRootCanvas: function _findRootCanvas(node) {
        var layers = 1;
        var canvas_node = null;
        while (node.parent && layers < 20) {
            node = node.parent;
            if (node.getComponent(cc.Canvas)) {
                canvas_node = node;
                break;
            }
            layers++;
        }

        return canvas_node;
    },
    _initAd: function _initAd() {
        var canvas = AladinSDK._findRootCanvas(AladinSDK._node_cache.more_sprite.node);
        //绑定事件
        //更多好玩事件
        if (AladinSDK._data.is_show_more) {
            //增加widget
            var widget = AladinSDK._node_cache.more_sprite.node.getComponent(cc.Widget);
            if (!widget) {
                widget = AladinSDK._node_cache.more_sprite.node.addComponent(cc.Widget);
            }
            if (canvas) {
                widget.target = canvas;
                widget.isAlignLeft = true;
                widget.isAlignBottom = true;
                widget.left = 0;
                widget.bottom = AladinSDK._data.more_bottom_pos;
            }

            AladinSDK._node_cache.more_sprite.node.setAnchorPoint(0, 0.5);

            AladinSDK._node_cache.more_sprite.node.on('touchend', function (event) {

                AladinSDK._data.nowClick = "more_sprite";

                if (AladinSDK._data.moreAdGroup[AladinSDK._data.currentMoreIndex].allow) {
                    //允许直接跳转
                    AladinSDK._toMiniProgram(AladinSDK.AdTypes.MORE, AladinSDK._data.moreAdGroup[AladinSDK._data.currentMoreIndex].appId, AladinSDK._data.moreAdGroup[AladinSDK._data.currentMoreIndex].objAppId);
                } else {
                    //需打开小程序码跳转
                    AladinSDK._preview(AladinSDK.AdTypes.MORE, AladinSDK._data.moreAdGroup[AladinSDK._data.currentMoreIndex].preview, AladinSDK._data.moreAdGroup[AladinSDK._data.currentMoreIndex].objAppId);
                }
            });
            AladinSDK.NextAd(AladinSDK.AdTypes.MORE, AladinSDK._data.currentMoreIndex);
            AladinSDK._node_cache.more_sprite.node.active = true;

            //开timer
            AladinSDK._data.more_timer = setInterval(function () {
                if (AladinSDK._node_cache.more_sprite.node.active) {
                    AladinSDK._data.currentMoreIndex++;
                    AladinSDK._data.currentMoreIndex = AladinSDK._data.currentMoreIndex % AladinSDK._data.moreAdGroup.length;
                    AladinSDK.NextAd(AladinSDK.AdTypes.MORE, AladinSDK._data.currentMoreIndex);
                }
            }, AladinSDK._data.adInterval);
        }

        //底部更多好玩事件
        if (AladinSDK._data.is_show_more_ad) {
            //增加widget
            var widget = AladinSDK._node_cache.more_ad_sprite.node.getComponent(cc.Widget);
            if (!widget) {
                widget = AladinSDK._node_cache.more_ad_sprite.node.addComponent(cc.Widget);
            }
            if (canvas) {
                widget.target = canvas;
                widget.isAlignBottom = true;
                widget.bottom = AladinSDK._data.bottom_pos;
            }

            AladinSDK._node_cache.more_ad_sprite.node.setScale(AladinSDK._data.bottom_scale, AladinSDK._data.bottom_scale);

            AladinSDK._node_cache.more_ad_sprite.node.on('touchend', function (event) {

                AladinSDK._data.nowClick = "more_ad_sprite";
                var index = AladinSDK._data.currentBottomIndex;

                if (AladinSDK._data.bottomAdGroup[AladinSDK._data.currentBottomIndex].allow) {
                    //允许直接跳转
                    AladinSDK._toMiniProgram(AladinSDK.AdTypes.BOTTOM, AladinSDK._data.bottomAdGroup[AladinSDK._data.currentBottomIndex].appId, AladinSDK._data.bottomAdGroup[AladinSDK._data.currentBottomIndex].objAppId);
                } else {
                    //需打开小程序码跳转
                    AladinSDK._preview(AladinSDK.AdTypes.BOTTOM, AladinSDK._data.bottomAdGroup[AladinSDK._data.currentBottomIndex].preview, AladinSDK._data.bottomAdGroup[AladinSDK._data.currentBottomIndex].objAppId);
                }
            });

            AladinSDK.NextAd(AladinSDK.AdTypes.BOTTOM, AladinSDK._data.currentBottomIndex);
            AladinSDK._node_cache.more_ad_sprite.node.active = true;

            //开timer
            AladinSDK._data.bottom_timer = setInterval(function () {
                if (AladinSDK._node_cache.more_ad_sprite.node.active) {
                    AladinSDK._data.currentBottomIndex++;
                    AladinSDK._data.currentBottomIndex = AladinSDK._data.currentBottomIndex % AladinSDK._data.bottomAdGroup.length;
                    AladinSDK.NextAd(AladinSDK.AdTypes.BOTTOM, AladinSDK._data.currentBottomIndex);
                }
            }, AladinSDK._data.adInterval);
        }

        if (AladinSDK.cb) {
            AladinSDK.cb();
        }

        if (AladinSDK._data.is_show_gdt) {
            AladinSDK.NextGdt();
            //开timer
            AladinSDK._data.gdt_timer = setInterval(function () {
                if (!AladinSDK._data.is_gdt_hide) {
                    AladinSDK.NextGdt();
                }
            }, AladinSDK._data.adInterval);
        }

        if (AladinSDK.cb) {
            AladinSDK.cb();
        }
    },

    _toMiniProgram: function _toMiniProgram(type, appId, targetAppId) {
        wx.showLoading({
            title: '正在跳转'
        });
        AladinSDK.report(AladinSDK.ReportTypes.MORE_CLICK, targetAppId);

        var typeName = type == 1 ? 'aladin_icon' : 'aladin_banr';

        wx.navigateToMiniProgram({
            appId: appId,
            path: "pages/index/index",
            extraData: {
                tgt: targetAppId,
                Ads: typeName,
                AdsPos: AladinSDK._data.appId
            },
            success: function success(res) {
                AladinSDK.report(AladinSDK.ReportTypes.MORE_FOLD, targetAppId);
                // 打开成功
            },
            complete: function complete(res) {
                wx.hideLoading();
            }
        });
    },

    _preview: function _preview(type, url, reportAppId) {
        AladinSDK.report(AladinSDK.ReportTypes.MORE_CLICK); //TODO
        wx.previewImage({
            urls: [url],
            success: function success() {
                AladinSDK.report(AladinSDK.ReportTypes.MORE_FOLD, reportAppId); //TODO
            }
        });
    },

    //切换图片
    NextAd: function NextAd() {
        var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
        var index = arguments[1];

        if (type == AladinSDK.AdTypes.GDT) {
            //TODO 刷广点通
        } else {
            var url = type == AladinSDK.AdTypes.MORE ? AladinSDK._data.moreAdGroup[index].icon : AladinSDK._data.bottomAdGroup[index].icon;
            var sp = type == AladinSDK.AdTypes.MORE ? AladinSDK._node_cache.more_sprite : AladinSDK._node_cache.more_ad_sprite;
            var imgTypy = url.substr(url.length - 3, 3);
            cc.loader.load(
            //TODO
            { url: url, type: imgTypy }, function (err, texture) {
                if (err) return console.error(err);
                sp.spriteFrame = new cc.SpriteFrame(texture);
            });
        }
    },
    NextGdt: function NextGdt() {
        if (AladinSDK._data.bannerAd) {
            AladinSDK._data.bannerAd.destroy();
        }
        AladinSDK._data.bannerAd = wx.createBannerAd({
            adUnitId: AladinSDK._data.adunit,
            style: {
                left: AladinSDK._data.gdt_left,
                width: AladinSDK._data.gdt_width,
                top: AladinSDK._data.gdt_top
            }
        });

        if (AladinSDK._data.bannerAd) {
            AladinSDK._data.bannerAd.onResize(function () {
                AladinSDK._data.bannerAd.style.left = AladinSDK._data.mobileWidht / 2 - AladinSDK._data.bannerAd.style.realWidth / 2;
                AladinSDK._data.bannerAd.style.top = AladinSDK._data.mobileHeight - AladinSDK._data.bannerAd.style.realHeight - AladinSDK._data.bannerAd_bottom;
            });
            AladinSDK._data.bannerAd.show();
        }
    },
    showMoreGames: function showMoreGames() {
        AladinSDK._node_cache.more_sprite.node.active = true;
    },
    hideMoreGames: function hideMoreGames() {
        AladinSDK._node_cache.more_sprite.node.active = false;
    },
    showBottomAd: function showBottomAd() {
        if (AladinSDK._data.is_show_gdt) {
            AladinSDK._data.bannerAd.show();
            AladinSDK._data.is_gdt_hide = false;
        } else {
            AladinSDK._node_cache.more_ad_sprite.node.active = true;
        }
    },

    hideBottomAd: function hideBottomAd() {
        if (AladinSDK._data.is_show_gdt) {
            if (AladinSDK._data.bannerAd) {
                AladinSDK._data.bannerAd.hide();
            }
            AladinSDK._data.is_gdt_hide = true;
        } else {
            AladinSDK._node_cache.more_ad_sprite.node.active = false;
        }
    },

    changeGDT: function changeGDT() {
        var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 300;
        var bottom = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
        var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

        if (AladinSDK._data.gdtUidArr.length < index + 1) {
            wx.showToast({
                title: '广点通数量小于该值',
                icon: "none"
            });
            AladinSDK._data.adunit = AladinSDK._data.gdtUidArr[0];
        } else {
            AladinSDK._data.adunit = AladinSDK._data.gdtUidArr[index];
        }

        AladinSDK._data.bannerAd_bottom = bottom;
        if (AladinSDK._data.mobileWidht - width < 0 || width == "auto") {
            AladinSDK._data.gdt_width = AladinSDK._data.mobileWidht;
            AladinSDK._data.gdt_left = 0;
        } else {
            AladinSDK._data.gdt_width = width;
            AladinSDK._data.gdt_left = (AladinSDK._data.mobileWidht - AladinSDK._data.gdt_width) / 2;
        }

        if (AladinSDK._data.mobileModel == "iPhone X") {
            AladinSDK._data.gdt_top = AladinSDK._data.mobileHeight - AladinSDK._data.gdt_width * 108 / 375 + 15 - bottom;
        } else {
            AladinSDK._data.gdt_top = AladinSDK._data.mobileHeight - AladinSDK._data.gdt_width * 108 / 375 - bottom;
        }
    }
};

exports.default = AladinSDK;
module.exports = exports['default'];

cc._RF.pop();