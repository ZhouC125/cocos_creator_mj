{"version":3,"sources":["TimerEvent.ts"],"names":[],"mappings":";;;;;AAAA,2CAA0C;AAG1C,sFAAsF;AACtF,EAAE;AACF,iDAAiD;AACjD,wBAAwB;AACxB,sEAAsE;AACtE,+EAA+E;AAC/E,EAAE;AACF,uEAAuE;AACvE,sEAAsE;AACtE,0EAA0E;AAC1E,4EAA4E;AAC5E,6EAA6E;AAC7E,8CAA8C;AAC9C,6EAA6E;AAC7E,8EAA8E;AAC9E,EAAE;AACF,+EAA+E;AAC/E,gFAAgF;AAChF,2EAA2E;AAC3E,gFAAgF;AAChF,gFAAgF;AAChF,8EAA8E;AAC9E,6EAA6E;AAC7E,wEAAwE;AACxE,gFAAgF;AAChF,sDAAsD;AACtD,EAAE;AACF,sFAAsF;AAKlF;;;;;;;GAOG;AACH;;;;;;;GAOG;AACH;IAAgC,8BAAU;IA8BtC;;;;;;;;;;OAUG;IACH;;;;;;;;OAQG;IACH,oBAAmB,IAAW,EAAE,OAAgB,EAAE,UAAmB;eACjE,kBAAM,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC;IACpC,CAAC;IAED;;;;;;;;;;;;;;;;;;;;OAoBG;IACH;;;;;;;;;;;;;;;;;;;;OAoBG;IACI,qCAAgB,GAAvB;IAEA,CAAC;IAED;;;;;;;;;;;;;;OAcG;IACH;;;;;;;;;;;OAWG;IACW,6BAAkB,GAAhC,UAAiC,MAAuB,EAAE,IAAW,EAAE,OAAgB,EAAE,UAAmB;QACxG,IAAI,KAAK,GAAG,uBAAU,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,CAAC,CAAC;QACrE,IAAI,MAAM,GAAG,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACzC,uBAAU,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QAC1B,OAAO,MAAM,CAAC;IAClB,CAAC;IAlID;;;;;OAKG;IACH;;;;;OAKG;IACW,gBAAK,GAAU,OAAO,CAAC;IAErC;;;;;OAKG;IACH;;;;;OAKG;IACW,yBAAc,GAAU,eAAe,CAAC;IAyG1D,iBAAC;CArID,AAqIC,CArI+B,uBAAU,GAqIzC;AArIY,gCAAU","file":"","sourceRoot":"..\\..\\..\\..\\..\\..\\assets\\scripts\\hall\\event","sourcesContent":["import { EgretEvent } from \"./EgretEvent\";\nimport { IEventDispatcher } from \"./IEventDispatcher\";\n\n//////////////////////////////////////////////////////////////////////////////////////\n//\n//  Copyright (c) 2014-present, Egret Technology.\n//  All rights reserved.\n//  Redistribution and use in source and binary forms, with or without\n//  modification, are permitted provided that the following conditions are met:\n//\n//     * Redistributions of source code must retain the above copyright\n//       notice, this list of conditions and the following disclaimer.\n//     * Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//     * Neither the name of the Egret nor the\n//       names of its contributors may be used to endorse or promote products\n//       derived from this software without specific prior written permission.\n//\n//  THIS SOFTWARE IS PROVIDED BY EGRET AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS\n//  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n//  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n//  IN NO EVENT SHALL EGRET AND CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n//  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n//  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;LOSS OF USE, DATA,\n//  OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n//  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n//  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n//  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n//////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\n    /**\n     * @language en_US\n     * A Timer object dispatches a TimerEvent objects whenever the Timer object reaches the interval specified by the Timer.delay property.\n     * @see egret.Timer\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @includeExample egret/events/TimerEvent.ts\n     */\n    /**\n     * @language zh_CN\n     * 每当 Timer 对象达到由 Timer.delay 属性指定的间隔时，Timer 对象即会调度 TimerEvent 对象。\n     * @see egret.Timer\n     * @version Egret 2.4\n     * @platform Web,Native\n     * @includeExample egret/events/TimerEvent.ts\n     */\n    export class TimerEvent extends EgretEvent {\n\n        /**\n         * @language en_US\n         * Dispatched whenever a Timer object reaches an interval specified according to the Timer.delay property.\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        /**\n         * @language zh_CN\n         * 每当 Timer 对象达到根据 Timer.delay 属性指定的间隔时调度。\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        public static TIMER:string = \"timer\";\n\n        /**\n         * @language en_US\n         * Dispatched whenever it has completed the number of requests set by Timer.repeatCount.\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        /**\n         * @language zh_CN\n         * 每当它完成 Timer.repeatCount 设置的请求数后调度。\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        public static TIMER_COMPLETE:string = \"timerComplete\";\n\n        /**\n         * @language en_US\n         * Creates an EgretEvent object with specific information relevant to timer events.\n         * @param type The type of the event. EgretEvent listeners can access this information through the inherited type property.\n         * @param bubbles Determines whether the EgretEvent object bubbles. EgretEvent listeners can access this information through\n         * the inherited bubbles property.\n         * @param cancelable Determines whether the EgretEvent object can be canceled. EgretEvent listeners can access this information\n         * through the inherited cancelable property.\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        /**\n         * @language zh_CN\n         * 创建一个 EgretEvent 对象，其中包含有关 timer 事件的特定信息。\n         * @param type 事件的类型。事件侦听器可以通过继承的 type 属性访问此信息。\n         * @param bubbles 确定 EgretEvent 对象是否冒泡。事件侦听器可以通过继承的 bubbles 属性访问此信息。\n         * @param cancelable 确定是否可以取消 EgretEvent 对象。事件侦听器可以通过继承的 cancelable 属性访问此信息。\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        public constructor(type:string, bubbles?:boolean, cancelable?:boolean) {\n            super(type, bubbles, cancelable);\n        }\n\n        /**\n         * @language en_US\n         * Instructs Egret runtime to render after processing of this event completes, if the display list has been modified.\n         * @example\n         * <pre>\n         *    function onTimer(event:TimerEvent):void {\n         *        if (40 < mySp.x && mySp.x < 375) {\n         *            mySp.x-= 50;\n         *        } else {\n         *            mySp.x=374;\n         *        }\n         *        event.updateAfterEvent();\n         *    }\n         *\n         *    var moveTimer:Timer=new Timer(50,250);\n         *    moveTimer.addEventListener(TimerEvent.TIMER,onTimer);\n         *    moveTimer.start();\n         * </pre>\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        /**\n         * @language zh_CN\n         * 如果已修改显示列表，调用此方法将会忽略帧频限制，在此事件处理完成后立即重绘屏幕。\n         * @example\n         * <pre>\n         *    function onTimer(event:TimerEvent):void {\n         *        if (40 < mySp.x && mySp.x < 375) {\n         *            mySp.x-= 50;\n         *        } else {\n         *            mySp.x=374;\n         *        }\n         *        event.updateAfterEvent();\n         *    }\n         *\n         *    var moveTimer:Timer=new Timer(50,250);\n         *    moveTimer.addEventListener(TimerEvent.TIMER,onTimer);\n         *    moveTimer.start();\n         * </pre>\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        public updateAfterEvent():void {\n            \n        }\n\n        /**\n         * @language en_US\n         * uses a specified target to dispatchEvent an event. Using this method can reduce the number of\n         * reallocate event objects, which allows you to get better code execution performance.\n         * @param target the event target\n         * @param type The type of the event. EgretEvent listeners can access this information through the inherited type property.\n         * @param bubbles Determines whether the EgretEvent object bubbles. EgretEvent listeners can access this information through\n         * the inherited bubbles property.\n         * @param cancelable Determines whether the EgretEvent object can be canceled. EgretEvent listeners can access this information\n         * through the inherited cancelable property.\n         * @see egret.EgretEvent.create()\n         * @see egret.EgretEvent.release()\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        /**\n         * @language zh_CN\n         * 使用指定的EventDispatcher对象来抛出事件对象。抛出的对象将会缓存在对象池上，供下次循环复用。\n         * @param target 事件派发目标\n         * @param type 事件的类型。事件侦听器可以通过继承的 type 属性访问此信息。\n         * @param bubbles 确定 EgretEvent 对象是否冒泡。事件侦听器可以通过继承的 bubbles 属性访问此信息。\n         * @param cancelable 确定是否可以取消 EgretEvent 对象。事件侦听器可以通过继承的 cancelable 属性访问此信息。\n         * @see egret.EgretEvent.create()\n         * @see egret.EgretEvent.release()\n         * @version Egret 2.4\n         * @platform Web,Native\n         */\n        public static dispatchTimerEvent(target:IEventDispatcher, type:string, bubbles?:boolean, cancelable?:boolean):boolean {\n            var event = EgretEvent.create(TimerEvent, type, bubbles, cancelable);\n            var result = target.dispatchEvent(event);\n            EgretEvent.release(event);\n            return result;\n        }\n    }\n\n"]}