"use strict";
cc._RF.push(module, '32f2a9BukJBepUwnVRv8e0S', 'MoreSettingLayer');
// scripts/hall/game/desk/MoreSettingLayer.js

"use strict";

var _TSCommon = require("../../TSCommon");

var GameCfg = require("GameCfg");
cc.Class({
    extends: cc.Component,

    properties: {
        bg: {
            default: null,
            type: cc.Node
        },

        settingLayer: {
            default: null,
            type: cc.Node
        },

        helperLayer: {
            default: null,
            type: cc.Node
        }
    },

    //界面载入
    onLoad: function onLoad() {
        this.init();

        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);
    },

    init: function init() {

        var size = this.bg.getContentSize();

        this.prePos = this.node.getPosition();

        this.node.setPosition(cc.p(this.prePos.x - size.width, this.prePos.y));

        this.settingLayer.active = false;

        this.helperLayer.active = false;
    },

    onTouch: function onTouch(event) {
        var point = event.touch.getLocation();
        var convertPoint = this.bg.convertToNodeSpace(point);
        var size = this.bg.getContentSize();
        var rect = cc.rect(0, 0, size.width, size.height);

        if (!cc.rectContainsPoint(rect, convertPoint)) {
            this.hide();
        }
    },

    start: function start() {},

    show: function show() {

        this.node.active = true;

        this.node.stopAllActions();

        var self = this;

        //运行动画
        var size = this.bg.getContentSize();

        var destPos = cc.p(this.prePos.x, this.prePos.y);

        var moveTo = cc.moveTo(0.2, destPos);

        this.node.runAction(moveTo);
    },

    hide: function hide() {
        //运行隐藏动画
        this.node.stopAllActions();

        var self = this;

        var size = this.bg.getContentSize();

        var destPos = cc.p(this.prePos.x - size.width, this.prePos.y);

        var moveTo = cc.moveTo(0.2, destPos);

        var onMoveEnd = function onMoveEnd() {
            self.node.active = false;
        };
        var callFunc = cc.callFunc(onMoveEnd, this);

        var sequence = cc.sequence(moveTo, callFunc);

        this.node.runAction(sequence);
    },

    onLeaveClicked: function onLeaveClicked() {
        var DeskScene = this.node.parent.getComponent("DeskScene");

        if (DeskScene.getIsPrivateRoom()) {
            G.matchGameReady = true;
            G.goldGameReady = null;
        } else {
            G.matchGameReady = false;
            // if(DeskScene.IsCXZ()){
            //     G.goldGameReady = 3;
            // }
            // else{
            //     G.goldGameReady = 4;
            // }
        }

        // cc.log("onLeaveClicked -----");
        require('GameLibSink').getInstance().getGameLib().leaveGameRoom();
        this.hide();
    },

    onChangedDeskClicked: function onChangedDeskClicked() {
        require('GameLibSink').getInstance().getGameLib().autoSit();
        _TSCommon.TSCommon.dispatchEvent(GameCfg.GAME_RESTART, { isReady: false });
        this.hide();
    },

    onHelpClicekd: function onHelpClicekd() {
        this.helperLayer.active = true;

        this.hide();
    },

    onRobotClicked: function onRobotClicked() {
        //如果游戏未开始 则不能托管

        // var sendCMD = require("sendCMD");
        // sendCMD.sendCMD_PO_ROBOTPLAYSTART()
        _TSCommon.TSCommon.dispatchEvent(GameCfg.NOTIFICATION_ROBOT, null);
        this.hide();
    },

    onSettingClicked: function onSettingClicked() {
        this.settingLayer.active = true;
        // var action =cc.fadeIn(0.01);
        // var action2 = cc.scaleTo(0.2, 1, 1);
        // var sequence = cc.sequence(action, action2);
        // this.settingLayer.runAction(sequence);
        this.hide();
    },

    //设置离开按钮enable属性
    setLeaveBtnEnabled: function setLeaveBtnEnabled(bEnabled) {
        this.node.getChildByName("leave_game_btn").getComponent(cc.Button).interactable = bEnabled;
    },

    //设置换桌按enable属性
    setChangedDeskBtnEnabled: function setChangedDeskBtnEnabled(bEnabled) {
        this.node.getChildByName("change_desk_btn").getComponent(cc.Button).interactable = bEnabled;
    }

});

cc._RF.pop();