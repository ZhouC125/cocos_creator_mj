{"version":3,"sources":["XmlToJson.js"],"names":["XmlToJson","cc","Class","parseXmlToJson","xmlStr","obj","xml","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","hasChildNodes","i","childNodes","xmlToJson","old","push","prototype","setXml","document","createElement","innerHTML","getElementsByTagName","getXml","parse","convert","xtype","toLowerCase","textContent","replace","text","items","node"],"mappings":"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","file":"XmlToJson.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\scripts\\hall","sourcesContent":["var XmlToJson=cc.Class({\r\n    // Changes XML to JSON\r\n    parseXmlToJson:function(xmlStr) {\r\n        // Create the return object\r\n        var obj = {};\r\n        if (xml.nodeType == 1) { // element\r\n            // do attributes\r\n            if (xml.attributes.length > 0) {\r\n            obj[\"@attributes\"] = {};\r\n                for (var j = 0; j < xml.attributes.length; j++) {\r\n                    var attribute = xml.attributes.item(j);\r\n                    obj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n                }\r\n            }\r\n        } else if (xml.nodeType == 3) { // text\r\n            obj = xml.nodeValue;\r\n        }\r\n        // do children\r\n        if (xml.hasChildNodes()) {\r\n            for(var i = 0; i < xml.childNodes.length; i++) {\r\n                var item = xml.childNodes.item(i);\r\n                var nodeName = item.nodeName;\r\n                if (typeof(obj[nodeName]) == \"undefined\") {\r\n                    obj[nodeName] = xmlToJson(item);\r\n                } else {\r\n                    if (typeof(obj[nodeName].length) == \"undefined\") {\r\n                        var old = obj[nodeName];\r\n                        obj[nodeName] = [];\r\n                        obj[nodeName].push(old);\r\n                    }\r\n                    obj[nodeName].push(xmlToJson(item));\r\n                }\r\n            }\r\n        }\r\n        return obj;\r\n    },\r\n});\r\n\r\nXmlToJson.prototype.setXml = function(xml) {\r\n    if(xml && typeof xml == \"string\") {\r\n        this.xml = document.createElement(\"div\");\r\n        this.xml.innerHTML = xml;\r\n        this.xml = this.xml.getElementsByTagName(\"*\")[0];\r\n    }\r\n    else if(typeof xml == \"object\"){\r\n        this.xml = xml;\r\n    }\r\n};\r\nXmlToJson.prototype.getXml = function() {\r\n    return this.xml;\r\n};\r\nXmlToJson.prototype.parse = function(xml) {\r\n    this.setXml(xml);\r\n    return this.convert(this.xml);\r\n};\r\nXmlToJson.prototype.convert = function(xml) {\r\n    if (xml.nodeType != 1) {\r\n        return null;\r\n    }\r\n    var obj = {};\r\n    obj.xtype = xml.nodeName.toLowerCase();\r\n    var nodeValue = (xml.textContent || \"\").replace(/(\\r|\\n)/g, \"\").replace(/^\\s+|\\s+$/g, \"\");\r\n    \r\n    if(nodeValue && xml.childNodes.length == 1) {\r\n        obj.text = nodeValue;\r\n    }\r\n    if (xml.attributes.length > 0) {\r\n        for (var j = 0; j < xml.attributes.length; j++) {\r\n            var attribute = xml.attributes.item(j);\r\n            obj[attribute.nodeName] = attribute.nodeValue;\r\n        }\r\n    }\r\n    if (xml.childNodes.length > 0) {\r\n        var items = [];\r\n        for(var i = 0; i < xml.childNodes.length; i++) {\r\n            var node = xml.childNodes.item(i);\r\n            var item = this.convert(node);\r\n            if(item) {\r\n                items.push(item);\r\n            }\r\n        }\r\n        if(items.length > 0) {\r\n            obj.items = items;\r\n        }\r\n    }\r\n    return obj;\r\n};\r\n"]}